#pragma once


class MyCameraState {
public:
    MyCameraSMC_AutoGenerated mode;
    MyCameraTopViewSMC_AutoGenerated top;
    MyCameraAimViewSMC_AutoGenerated aim;
    MyCameraMoveViewMoveSMC_AutoGenerated move;
    MyCameraMoveViewRotateSMC_AutoGenerated rotate;

    // mode
    bool isMoveView();
    bool isAimView();
    bool isTopView();

    // top
    bool isCueRotateLeft();
    bool isCueRotateRight();

    // aim
    bool isAimLeft();
    bool isAimRight();
    bool isShootingNow();
    NxVec3 getAimPoint();

    // move
    bool isMoveForward();
    bool isMoveBackwardLeft();
    bool isMoveLeft();
    bool isMoveBackward();
    bool isMoveRight();
    bool isMoveForwardLeft();
    bool isMoveForwardRight();
    bool isMoveStop();
    bool isMoveBackwardRight();

    // rotate
    bool isPitchUp();
    bool isRotateCounterClockWiseByZ();
    bool isRotateClockWiseByZ();
    bool isRotateCounterClockWiseByZ_PitchDown();
    bool isRotateClockWiseByZ_PitchDown();
    bool isRotateStop();
    bool isRotateCounterClockWiseByZ_PitchUp();
    bool isRotateClockWiseByZ_PitchUp();
    bool isPitchDown();

    // global
    bool isBallMoving();


public:
    MyCameraState( MyCamera *, BilliardControl * );

private:
    BilliardControl * const billiardControl_;
};

