//----------------------------------------------
// MyCameraTopViewSMC_AutoGenerated.cpp
// FSM:       MyCameraTopViewSMC_AutoGenerated
// Context:   MyCameraTopViewSMC
// Version:   
// Generated: Sunday 08/30/2009 at 02:29:40 EDT
//


static char _versID[]  = "";

#include "MyCameraTopViewSMC_AutoGenerated.h"

namespace smc
{

//----------------------------------------------
// Definitions of static state objects

//----------------------------------------------
MyCameraTopViewSMC_AutoGeneratedRotateRightState MyCameraTopViewSMC_AutoGenerated::RotateRight;
MyCameraTopViewSMC_AutoGeneratedRotateStopState MyCameraTopViewSMC_AutoGenerated::RotateStop;
MyCameraTopViewSMC_AutoGeneratedRotateLeftState MyCameraTopViewSMC_AutoGenerated::RotateLeft;

//----------------------------------------------
// Default Event Functions

//----------------------------------------------

void MyCameraTopViewSMC_AutoGeneratedState::beginRotateLeft(MyCameraTopViewSMC_AutoGenerated& s)
  { s.FSMError("beginRotateLeft", s.GetState().StateName()); }

void MyCameraTopViewSMC_AutoGeneratedState::beginRotateRight(MyCameraTopViewSMC_AutoGenerated& s)
  { s.FSMError("beginRotateRight", s.GetState().StateName()); }

void MyCameraTopViewSMC_AutoGeneratedState::endRotateLeft(MyCameraTopViewSMC_AutoGenerated& s)
  { s.FSMError("endRotateLeft", s.GetState().StateName()); }

void MyCameraTopViewSMC_AutoGeneratedState::endRotateRight(MyCameraTopViewSMC_AutoGenerated& s)
  { s.FSMError("endRotateRight", s.GetState().StateName()); }

//----------------------------------------------
// The States and their Transitions
//----------------------------------------------

//----------------------------------------------
// RotateRight Actions and Transitions
//----------------------------------------------

// Starting State: RotateRight
// Event:          endRotateRight
//
void MyCameraTopViewSMC_AutoGeneratedRotateRightState::endRotateRight( MyCameraTopViewSMC_AutoGenerated& s )
{

    s.endRotateRight_();

    // Change the state
    s.SetState(MyCameraTopViewSMC_AutoGenerated::RotateStop);
}

//----------------------------------------------
// RotateStop Actions and Transitions
//----------------------------------------------

// Starting State: RotateStop
// Event:          beginRotateRight
//
void MyCameraTopViewSMC_AutoGeneratedRotateStopState::beginRotateRight( MyCameraTopViewSMC_AutoGenerated& s )
{

    s.beginRotateRight_();

    // Change the state
    s.SetState(MyCameraTopViewSMC_AutoGenerated::RotateRight);
}

// Starting State: RotateStop
// Event:          beginRotateLeft
//
void MyCameraTopViewSMC_AutoGeneratedRotateStopState::beginRotateLeft( MyCameraTopViewSMC_AutoGenerated& s )
{

    s.beginRotateLeft_();

    // Change the state
    s.SetState(MyCameraTopViewSMC_AutoGenerated::RotateLeft);
}

//----------------------------------------------
// RotateLeft Actions and Transitions
//----------------------------------------------

// Starting State: RotateLeft
// Event:          endRotateLeft
//
void MyCameraTopViewSMC_AutoGeneratedRotateLeftState::endRotateLeft( MyCameraTopViewSMC_AutoGenerated& s )
{

    s.endRotateLeft_();

    // Change the state
    s.SetState(MyCameraTopViewSMC_AutoGenerated::RotateStop);
}

//----------------------------------------------
// State Machine Constructor: MyCameraTopViewSMC_AutoGenerated
//  set Initial State to: RotateStop
//
//----------------------------------------------
MyCameraTopViewSMC_AutoGenerated::MyCameraTopViewSMC_AutoGenerated() : itsState(&RotateStop)
{
    // Entry functions for: RotateStop
}

//  Get version information
//
const char* MyCameraTopViewSMC_AutoGenerated::GetVersion() const
{ return _versID; }

}  // end namespace smc

