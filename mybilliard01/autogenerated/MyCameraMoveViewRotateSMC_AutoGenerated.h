#ifndef FSM_MyCameraMoveViewRotateSMC_AutoGenerated_08_30_2009_02_29_40_H
#define FSM_MyCameraMoveViewRotateSMC_AutoGenerated_08_30_2009_02_29_40_H
//----------------------------------------------
// MyCameraMoveViewRotateSMC_AutoGenerated.h
// FSM:       MyCameraMoveViewRotateSMC_AutoGenerated
// Context:   MyCameraMoveViewRotateSMC
// Version:   
// Generated: Sunday 08/30/2009 at 02:29:40 EDT
//


// Included header files

#include "MyCameraMoveViewRotateSMC_AutoGenerated.h"

namespace smc
{

// Forward Declarations

class MyCameraMoveViewRotateSMC_AutoGenerated;

//----------------------------------------------
// MyCameraMoveViewRotateSMC_AutoGeneratedState: The base state class
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGeneratedState
{
  public: 
    virtual const char* StateName() const = 0;
    virtual void endPitchDown( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginRotateCounterClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void endRotateClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginPitchDown( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void endPitchUp( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void endRotateCounterClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginRotateClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginPitchUp( MyCameraMoveViewRotateSMC_AutoGenerated& );
};

//----------------------------------------------
// State: PitchUp
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGeneratedPitchUpState : public MyCameraMoveViewRotateSMC_AutoGeneratedState
{
  public: 
    virtual const char* StateName() const
        { return "PitchUp"; }
    virtual void beginRotateCounterClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginRotateClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void endPitchUp( MyCameraMoveViewRotateSMC_AutoGenerated& );
};
//----------------------------------------------
// State: RotateCounterClockWiseByZ
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGeneratedRotateCounterClockWiseByZState : public MyCameraMoveViewRotateSMC_AutoGeneratedState
{
  public: 
    virtual const char* StateName() const
        { return "RotateCounterClockWiseByZ"; }
    virtual void beginPitchDown( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginPitchUp( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void endRotateCounterClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
};
//----------------------------------------------
// State: RotateClockWiseByZ
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGeneratedRotateClockWiseByZState : public MyCameraMoveViewRotateSMC_AutoGeneratedState
{
  public: 
    virtual const char* StateName() const
        { return "RotateClockWiseByZ"; }
    virtual void endRotateClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginPitchUp( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginPitchDown( MyCameraMoveViewRotateSMC_AutoGenerated& );
};
//----------------------------------------------
// State: RotateCounterClockWiseByZ_PitchDown
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGeneratedRotateCounterClockWiseByZ_PitchDownState : public MyCameraMoveViewRotateSMC_AutoGeneratedState
{
  public: 
    virtual const char* StateName() const
        { return "RotateCounterClockWiseByZ_PitchDown"; }
    virtual void endRotateCounterClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void endPitchDown( MyCameraMoveViewRotateSMC_AutoGenerated& );
};
//----------------------------------------------
// State: RotateClockWiseByZ_PitchDown
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGeneratedRotateClockWiseByZ_PitchDownState : public MyCameraMoveViewRotateSMC_AutoGeneratedState
{
  public: 
    virtual const char* StateName() const
        { return "RotateClockWiseByZ_PitchDown"; }
    virtual void endRotateClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void endPitchDown( MyCameraMoveViewRotateSMC_AutoGenerated& );
};
//----------------------------------------------
// State: RotateStop
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGeneratedRotateStopState : public MyCameraMoveViewRotateSMC_AutoGeneratedState
{
  public: 
    virtual const char* StateName() const
        { return "RotateStop"; }
    virtual void beginRotateCounterClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginPitchDown( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginPitchUp( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginRotateClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
};
//----------------------------------------------
// State: RotateCounterClockWiseByZ_PitchUp
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGeneratedRotateCounterClockWiseByZ_PitchUpState : public MyCameraMoveViewRotateSMC_AutoGeneratedState
{
  public: 
    virtual const char* StateName() const
        { return "RotateCounterClockWiseByZ_PitchUp"; }
    virtual void endRotateCounterClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void endPitchUp( MyCameraMoveViewRotateSMC_AutoGenerated& );
};
//----------------------------------------------
// State: RotateClockWiseByZ_PitchUp
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGeneratedRotateClockWiseByZ_PitchUpState : public MyCameraMoveViewRotateSMC_AutoGeneratedState
{
  public: 
    virtual const char* StateName() const
        { return "RotateClockWiseByZ_PitchUp"; }
    virtual void endRotateClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void endPitchUp( MyCameraMoveViewRotateSMC_AutoGenerated& );
};
//----------------------------------------------
// State: PitchDown
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGeneratedPitchDownState : public MyCameraMoveViewRotateSMC_AutoGeneratedState
{
  public: 
    virtual const char* StateName() const
        { return "PitchDown"; }
    virtual void beginRotateClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void endPitchDown( MyCameraMoveViewRotateSMC_AutoGenerated& );
    virtual void beginRotateCounterClockWiseByZ( MyCameraMoveViewRotateSMC_AutoGenerated& );
};
//----------------------------------------------
// MyCameraMoveViewRotateSMC_AutoGenerated: The Finite State Machine class
//----------------------------------------------
class MyCameraMoveViewRotateSMC_AutoGenerated: public MyCameraMoveViewRotateSMC
{
  public: 
    // Static State variables
    static MyCameraMoveViewRotateSMC_AutoGeneratedPitchUpState PitchUp;
    static MyCameraMoveViewRotateSMC_AutoGeneratedRotateCounterClockWiseByZState RotateCounterClockWiseByZ;
    static MyCameraMoveViewRotateSMC_AutoGeneratedRotateClockWiseByZState RotateClockWiseByZ;
    static MyCameraMoveViewRotateSMC_AutoGeneratedRotateCounterClockWiseByZ_PitchDownState RotateCounterClockWiseByZ_PitchDown;
    static MyCameraMoveViewRotateSMC_AutoGeneratedRotateClockWiseByZ_PitchDownState RotateClockWiseByZ_PitchDown;
    static MyCameraMoveViewRotateSMC_AutoGeneratedRotateStopState RotateStop;
    static MyCameraMoveViewRotateSMC_AutoGeneratedRotateCounterClockWiseByZ_PitchUpState RotateCounterClockWiseByZ_PitchUp;
    static MyCameraMoveViewRotateSMC_AutoGeneratedRotateClockWiseByZ_PitchUpState RotateClockWiseByZ_PitchUp;
    static MyCameraMoveViewRotateSMC_AutoGeneratedPitchDownState PitchDown;

    MyCameraMoveViewRotateSMC_AutoGenerated(); // default Constructor

    // Event functions
    virtual void endPitchDown() { itsState->endPitchDown( *this ); }
    virtual void beginRotateCounterClockWiseByZ() { itsState->beginRotateCounterClockWiseByZ( *this ); }
    virtual void endRotateClockWiseByZ() { itsState->endRotateClockWiseByZ( *this ); }
    virtual void beginPitchDown() { itsState->beginPitchDown( *this ); }
    virtual void endPitchUp() { itsState->endPitchUp( *this ); }
    virtual void endRotateCounterClockWiseByZ() { itsState->endRotateCounterClockWiseByZ( *this ); }
    virtual void beginRotateClockWiseByZ() { itsState->beginRotateClockWiseByZ( *this ); }
    virtual void beginPitchUp() { itsState->beginPitchUp( *this ); }

    // State Accessor functions
    void SetState( MyCameraMoveViewRotateSMC_AutoGeneratedState& theState ) { itsState = &theState; }
    MyCameraMoveViewRotateSMC_AutoGeneratedState& GetState() const { return *itsState; }

    const char* GetCurrentStateName() const { return itsState->StateName(); }
    const char* GetVersion() const;

  private: 
    MyCameraMoveViewRotateSMC_AutoGeneratedState* itsState;
};

}  // end namespace smc

#endif /* FSM_MyCameraMoveViewRotateSMC_AutoGenerated_08_30_2009_02_29_40_H */
